// Class: CreditCardDetails.java 
package paymentprocessing;

import java.util.Date;

public class CreditCardDetails {
	
	private String cardNumber;
	private int cvv;
	private Date cardDate;
	
	public String getCardNumber() {
		return cardNumber;
	}
	public void setCardNumber(String cardNumber) {
		this.cardNumber = cardNumber;
	}
	public int getCvv() {
		return cvv;
	}
	public void setCvv(int cvv) {
		this.cvv = cvv;
	}
	public Date getCardDate() {
		return cardDate;
	}
	public void setCardDate(Date cardDate) {
		this.cardDate = cardDate;
	}
	
	
	

}
 
==================================================== 
 
// Class: CreditCardStrategy.java 
package paymentprocessing;

public class CreditCardStrategy implements IPaymentStrategy {

	private double amount;
	private CreditCardDetails cardDetails;

	public CreditCardStrategy(double amount, CreditCardDetails details) {
		this.amount = amount;
		this.cardDetails = details;
	}

	@Override
	public void pay(double amount) {
		System.out.print("Executing Credit Card Payment");

	}

}
 
==================================================== 
 
// Class: ECommerceApp.java 
package paymentprocessing;

import java.util.Date;

public class ECommerceApp {
	public static void main(String[] args) {
		double billAmount = 1250.75;

		CreditCardDetails details = new CreditCardDetails();
		details.setCardDate(new Date());
		details.setCardNumber("1234-5678-9101");
		details.setCvv(123);

		NetBankingDetails nbDetais = new NetBankingDetails();
		nbDetais.setAccountNumber(12798392);
		nbDetais.setBranchCode("AXIS1244");
		nbDetais.setIFSC("UTI00000234");

		PaymentContext upi = new PaymentContext(new UPIStrategy(billAmount, "shaik@ybl"));
		PaymentContext netbanking = new PaymentContext(new NetBankingStrategy(billAmount, nbDetais));
		PaymentContext cc = new PaymentContext(new CreditCardStrategy(billAmount, details));
		PaymentContext wallet = new PaymentContext(new WalletPaymentStrategy(billAmount));

		upi.pay();
		netbanking.pay();
		cc.pay();
		wallet.pay();

	}
}
 
==================================================== 
 
// Class: IPaymentContext.java 
package paymentprocessing;

public interface IPaymentContext {
	
	
	void pay();

}
 
==================================================== 
 
// Class: IPaymentStrategy.java 
package paymentprocessing;

public interface IPaymentStrategy {

	void pay(double amount);
}
 
==================================================== 
 
// Class: NetBankingDetails.java 
package paymentprocessing;

public class NetBankingDetails {

	private long accountNumber;
	private String IFSC;
	private String BranchCode;

	public long getAccountNumber() {
		return accountNumber;
	}

	public void setAccountNumber(long accountNumber) {
		this.accountNumber = accountNumber;
	}

	public String getIFSC() {
		return IFSC;
	}

	public void setIFSC(String iFSC) {
		IFSC = iFSC;
	}

	public String getBranchCode() {
		return BranchCode;
	}

	public void setBranchCode(String branchCode) {
		BranchCode = branchCode;
	}

}
 
==================================================== 
 
// Class: NetBankingStrategy.java 
package paymentprocessing;

public class NetBankingStrategy implements IPaymentStrategy {

	private double amount;
	private NetBankingDetails details;

	public NetBankingStrategy(double amount, NetBankingDetails details) {
		this.amount = amount;
		this.details = details;
	}

	@Override
	public void pay(double amount) {
		// TODO Auto-generated method stub
		System.out.println("Executing Net Banking Strategy");
	}

}
 
==================================================== 
 
// Class: PaymentContext.java 
package paymentprocessing;

public class PaymentContext implements IPaymentContext {

	IPaymentStrategy paymentStrategy;

	public PaymentContext(IPaymentStrategy strategy) {
		this.paymentStrategy = strategy;
	}

	@Override
	public void pay() {
		this.paymentStrategy.pay(123.44);
	}

	
	
}
 
==================================================== 
 
// Class: UPIStrategy.java 
package paymentprocessing;

public class UPIStrategy implements IPaymentStrategy {
	
	private double amount;
	private String upiId;

	public UPIStrategy(double amount, String upiId) {
		this.amount = amount;
		this.upiId = upiId;
	}
	

	@Override
	public void pay(double amount) {
		System.out.println("Executing UPI payment strategy");

	}

}
 
==================================================== 
 
// Class: WalletPaymentStrategy.java 
package paymentprocessing;

public class WalletPaymentStrategy implements IPaymentStrategy {
	
	private double amount;

	public WalletPaymentStrategy(double amount) {
		this.amount = amount;
	}

	@Override
	public void pay(double amount) {
		// TODO Auto-generated method stub
		System.out.println("Executing Wallet Payment Strategy");

	}

}
 
==================================================== 
 
